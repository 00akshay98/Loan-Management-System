Database Schema:
Let's create a simple database schema with three tables: Customers, Loans, and Payments.

Customers Table:

customer_id (Primary Key)
name
email
phone
Loans Table:

loan_id (Primary Key)
customer_id (Foreign Key referencing Customers)
loan_amount
interest_rate
loan_status (e.g., 'Pending', 'Approved', 'Paid Off')
Payments Table:

payment_id (Primary Key)
loan_id (Foreign Key referencing Loans)
payment_amount
payment_date
SQL Code:

Creating Tables:CREATE TABLE Customers (
  customer_id INT PRIMARY KEY,
  name VARCHAR(50),
  email VARCHAR(100),
  phone VARCHAR(20)
);

CREATE TABLE Loans (
  loan_id INT PRIMARY KEY,
  customer_id INT,
  loan_amount DECIMAL(10, 2),
  interest_rate DECIMAL(4, 2),
  loan_status VARCHAR(20)
);

CREATE TABLE Payments (
  payment_id INT PRIMARY KEY,
  loan_id INT,
  payment_amount DECIMAL(10, 2),
  payment_date DATE
);

-- Add Foreign Key Constraints
ALTER TABLE Loans
ADD FOREIGN KEY (customer_id)
REFERENCES Customers(customer_id);

ALTER TABLE Payments
ADD FOREIGN KEY (loan_id)
REFERENCES Loans(loan_id);

-- Insert 15 random customer entries
INSERT INTO Customers (customer_id, name, email, phone)
VALUES
(1, 'Rhythm','rhythm@example.com', '123-456-7890'),
  (2, 'Jane Smith', 'jane@example.com', '987-654-3210'),
  (3, 'Alice Johnson', 'alice@example.com', '555-123-4567'),
  (4, 'Bob Wilson', 'bob@example.com', '123-789-4560'),
  (5, 'Ella Davis', 'ella@example.com', '444-888-7777'),
  (6, 'Michael Brown', 'michael@example.com', '777-111-3333'),
  (7, 'Olivia White', 'olivia@example.com', '222-444-5555'),
  (8, 'William Taylor', 'william@example.com', '888-999-0000'),
  (9, 'Sofia Lee', 'sofia@example.com', '111-222-3333'),
  (10, 'Liam Harris', 'liam@example.com', '666-222-8888'),
  (11, 'Ava Anderson', 'ava@example.com', '555-999-6666'),
  (12, 'Noah Martinez', 'noah@example.com', '444-333-5555'),
  (13, 'Isabella Turner', 'isabella@example.com', '222-777-4444'),
  (14, 'Mason Hall', 'mason@example.com', '111-888-6666'),
  (15, 'Emily Miller', 'emily@example.com', '555-444-9999'),
  (16, 'James Clark', 'james@example.com', '666-777-2222');
-- Insert random loan entries
INSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_status)
VALUES
  (1, 1, 10000.00, 0.05, 'Approved'),
(2, 2, 15000.00, 0.04, 'Pending'),
  (3, 3, 20000.00, 0.03, 'Approved'),
  (4, 4, 8000.00, 0.06, 'Approved'),
  (5, 5, 12000.00, 0.05, 'Pending'),
  (6, 6, 10000.00, 0.04, 'Approved'),
  (7, 7, 25000.00, 0.03, 'Approved'),
  (8, 8, 18000.00, 0.05, 'Pending'),
  (9, 9, 22000.00, 0.04, 'Pending'),
  (10, 10, 7000.00, 0.06, 'Approved'),
  (11, 11, 13500.00, 0.03, 'Pending'),
  (12, 12, 19000.00, 0.05, 'Approved'),
  (13, 13, 21000.00, 0.04, 'Approved'),
  (14, 14, 9500.00, 0.05, 'Pending'),
  (15, 15, 17000.00, 0.04, 'Pending');
-- Insert random payment entries
INSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date)
VALUES
  (1, 1, 1000.00, '2023-02-15'),
(2, 2, 5000.00, '2023-01-20'),
  (3, 3, 3500.00, '2023-02-15'),
  (4, 4, 1500.00, '2023-03-10'),
  (5, 5, 3000.00, '2023-01-25'),
  (6, 6, 2000.00, '2023-02-20'),
  (7, 7, 5000.00, '2023-03-15'),
  (8, 8, 1800.00, '2023-01-30'),
  (9, 9, 2100.00, '2023-02-25'),
  (10, 10, 1000.00, '2023-03-20'),
  (11, 11, 4000.00, '2023-01-10'),
  (12, 12, 2200.00, '2023-02-05'),
  (13, 13, 2500.00, '2023-03-01'),
  (14, 14, 800.00, '2023-01-15'),
  (15, 15, 1500.00, '2023-02-10');

-- Update loan status to 'Approved'
UPDATE Loans
SET loan_status = 'Approved'
WHERE loan_id = 1;


-- Calculate the remaining balance of a loan
SELECT Customers.name, Loans.loan_amount - SUM(Payments.payment_amount) AS remaining_balance
FROM Customers
JOIN Loans ON Customers.customer_id = Loans.customer_id
LEFT JOIN Payments ON Loans.loan_id = Payments.loan_id
WHERE Loans.loan_id = 1
GROUP BY Customers.name, Loans.loan_amount;





